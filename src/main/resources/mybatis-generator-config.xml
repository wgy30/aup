<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration>
    <!--    引入配置文件-->
    <properties resource="application.yml"/>
    <context id="mycontext" targetRuntime="MyBatis3Simple" defaultModelType="flat">

        <!-- 这个插件给生成的Java模型对象增加了equals和hashCode方法 -->
        <!--<plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin"/>-->

        <!--注释-->
        <commentGenerator>
            <!-- 添加表中的字段注释&ndash;&gt;-->
            <!-- <property name="addRemarkComments" value="true"/>-->
            <!-- 是否不生成注释 -->
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>

        <!--JDBC连接-->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/edu-sys"
                        userId="root"
                        password="123456">
            <!--高版本的 mysql-connector-java 需要设置 nullCatalogMeansCurrent=true-->
            <property name="nullCatalogMeansCurrent" value="true"/>
        </jdbcConnection>

        <!--生成实体类的位置-->
        <javaModelGenerator targetPackage="com.wgy.aup.dto" targetProject="src/main/java">
            <!-- 是否让schema作为包的后缀，默认为false -->
            <!--<property name="enableSubPackages" value="false"/>-->
            <!-- 是否针对string类型的字段在set方法中进行修剪，默认false -->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!-- 生成mapper.xml文件-->
        <sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources">

        </sqlMapGenerator>

        <!--生成xxxMapper.java接口-->
        <javaClientGenerator targetPackage="com.wgy.aup.dao" targetProject="src/main/java" type="XMLMAPPER">
            <!--<property name="enableSubPackages" value="false"/>-->
        </javaClientGenerator>

        <!-- schema为数据库名，oracle需要配置，mysql不需要配置。
             tableName为对应的数据库表名
             domainObjectName 是要生成的实体类名(可以不指定)
             enableXXXByExample 默认为 true， 为 true 会生成一个对应Example帮助类，帮助你进行条件查询，不想要可以设为false
        -->
        <table tableName="base_role"
               enableCountByExample="false"
               enableDeleteByExample="false"
               enableSelectByExample="false"
               enableUpdateByExample="false"
               selectByExampleQueryId="false">
            <!--  是否使用实际列名 -->
            <!-- <property name="useActualColumnNames" value="false"/>-->
        </table>
    </context>
</generatorConfiguration>
